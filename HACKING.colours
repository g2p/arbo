Handling LS_COLORS
How ls does it.
color_indicator contains the escape codes.
LS_COLORS is parsed, and updates the escape codes.
Some fundamental escape codes begin and end terminal escape sequences.
The rest are colour data that will be output, bracketed by those escape sequences.
Files are stat-ed, and the most specific colour indicator is found.
Non-filename text (if ls -l) is output.
The colour indicator is output, bracketed. Then the quoted file name is output.
Then the colour is reset to the normal colour, and a newline is printed.
Finally, a special escape sequence resets the colours.

ls invocation is tricky.
If we give it full paths, we get colour on the full path,
which is bad for directory portions. Doing splitting after that
will fail.
If we cd and give it short paths, we add invocation overhead.

Librarifying or reusing ls code could work.
Quoting is already in gnulib.
But colouring has some globals, interacts with statâ€¦
Complicated.

Other implementers:
http://www.google.com/codesearch?q=getenv%20LS_COLORS%20\Wlc\W%20\Wrc\W

gnome-commander has a clean impl, but ignores the term aspects.
Busybox looks at LS_COLORS but hardcodes a few color mappings.
yafc, lftp, tree, zsh seem to have what I need.
yafc is the cleanest.

